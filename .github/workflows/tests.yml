name: Automated test suite
on:
  push:
    branches: [ master ]
    tags: [ v* ]
  pull_request:
    branches: [ master ]

jobs:
  automated-test-suite:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install Ganache
        run: npm install -g ganache
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction -E web-server -E execution
      - name: Run test scripts
        run: poetry run pytest --tb=native
        env:
          TRADING_STRATEGY_API_KEY: ${{ secrets.TRADING_STRATEGY_API_KEY }}
          BNB_CHAIN_JSON_RPC: ${{ secrets.BNB_CHAIN_JSON_RPC }}      

  build:
    runs-on: ubuntu-latest
    needs: automated-test-suite
    # Skip build on master push
    if: github.event_name != 'push' || github.ref != 'refs/heads/master'
    env:
      REGISTRY: ghcr.io
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Read metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
      - name: Log in to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # experimental: https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#cache-backend-api
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Trigger workflow_dispatch in other repos (binder-env, docs...)
  build-other-repos:
    runs-on: ubuntu-latest
    needs: automated-test-suite
    # Only trigger on master branch push
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Trigger docs build
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'tradingstrategy-ai',
              repo: 'docs',
              workflow_id: 'rsync-docs.yml',
              ref: 'master'
            })
      - name: Trigger binder-env build
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'tradingstrategy-ai',
              repo: 'binder-env',
              workflow_id: 'binder.yml',
              ref: 'master'
            })
